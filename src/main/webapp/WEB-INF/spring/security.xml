<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security-3.1.xsd">

	<!-- http auto-config="true"> <intercept-url pattern="/**" access="ROLE_ADMIN" 
		/> </http -->

	<http auto-config="true" use-expressions="true">
		<form-login 
		login-page="/login" 
		 	login-processing-url="/j_spring_security_check" 
		authentication-failure-url="/login?login_error=t" /> 
		<logout logout-url="/j_spring_security_logout" />
			<intercept-url pattern="/login" access="permitAll" />
			<intercept-url pattern="*/j_spring_security_check" access="permitAll" />
			<intercept-url pattern="/**" access="hasRole('ROLE_ADMIN')" />
	</http>

	<authentication-manager>
		<authentication-provider>
			<user-service id="userDetailsService">
				<user name="admin" password="admin" authorities="ROLE_USER, ROLE_ADMIN" />
				<user name="username" password="password" authorities="ROLE_USER" />
				<user name="test" password="test" authorities="ROLE_USER" />
			</user-service>
		</authentication-provider>
	</authentication-manager>
	
	<!--<authentication-manager>
        <authentication-provider>
            <jdbc-user-service id="userDetailsService" data-source-ref="dataSource"
            users-by-username-query=
            "select username, 'admin', true from users where username=?"
            authorities-by-username-query=
            "select username, 'ROLE_ADMIN' from authorities where username=?"/>
        </authentication-provider>
    </authentication-manager>-->

</beans:beans>