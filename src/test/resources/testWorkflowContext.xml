<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd

        http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:property-placeholder location="classpath:environment.test.properties"/>

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://${db.host}/${db.schema}?rewriteBatchedStatements=true"/>
        <property name="username" value="${db.username}"/>
        <property name="password" value="${db.password}"/>
    </bean>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="com.zuehlke.pgadmissions.domain"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.format_sql">false</prop>
                <prop key="javax.persistence.validation.mode">NONE</prop>
                <prop key="hibernate.hbm2ddl.auto">create-drop</prop>
                <prop key="hibernate.cache.use_second_level_cache">false</prop>
                <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory
                </prop>
            </props>
        </property>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <bean id="defaultTransactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
        <property name="transactionManager" ref="transactionManager"/>
    </bean>

    <context:component-scan base-package="com.zuehlke.pgadmissions"/>

    <bean id="javaMailSender" class="com.zuehlke.pgadmissions.mail.MailMockSender"/>

    <!-- bean definitions -->

    <bean id="webServiceTemplate" class="com.zuehlke.pgadmissions.utils.EasyMockFactoryBean" primary="true">
        <constructor-arg value="org.springframework.ws.client.core.WebServiceTemplate"/>
    </bean>

    <bean id="authenticationManager" class="com.zuehlke.pgadmissions.utils.EasyMockFactoryBean" primary="true">
        <constructor-arg value="org.springframework.security.authentication.AuthenticationManager"/>
    </bean>

    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>

    <bean id="mailSender" class="com.zuehlke.pgadmissions.mail.MailSenderMock" primary="true"/>

    <bean id="applicationExportServiceHelper" class="com.zuehlke.pgadmissions.services.lifecycle.helpers.ApplicationExportServiceHelperMock" primary="true"/>

    <bean id="authenticationProvider" class="com.zuehlke.pgadmissions.security.PrismAuthenticationProvider"/>

    <bean id="jacksonObjectMapper" class="org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean">
        <property name="modules">
            <array>
                <bean class="com.fasterxml.jackson.datatype.joda.JodaModule"/>
                <bean class="com.zuehlke.pgadmissions.rest.PrismJacksonModule"/>
            </array>
        </property>
    </bean>

    <bean id="jacksonMessageConverter"
          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="objectMapper" ref="jacksonObjectMapper"/>
    </bean>

    <bean class="org.dozer.DozerBeanMapper">
        <property name="mappingFiles">
            <list>
                <value>dozerMappings.xml</value>
            </list>
        </property>
    </bean>

     <!-- threadpool executor config -->
    <bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
	    <property name="corePoolSize" value="5" />
	    <property name="maxPoolSize" value="10" />
	    <property name="WaitForTasksToCompleteOnShutdown" value="true" />
    </bean>

</beans>
