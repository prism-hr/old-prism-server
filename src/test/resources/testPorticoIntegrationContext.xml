<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

    <context:property-placeholder location="classpath:environment.properties" />

    <import resource="../../src/main/webapp/WEB-INF/spring/uclIntegrationContext.xml" />

    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan" value="com.zuehlke.pgadmissions.domain" />
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="javax.persistence.validation.mode">NONE</prop>
            </props>
        </property>
    </bean>

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="com.mysql.jdbc.Driver" />
<!--         <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/pgadmissions_test?zeroDateTimeBehavior=convertToNull&amp;autoReconnect=true" /> -->
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/pgadmissions?zeroDateTimeBehavior=convertToNull&amp;autoReconnect=true" />
        <property name="user" value="pgadmissions" />
        <property name="password" value="pgadmissions" />

        <!-- these are C3P0 properties -->
        <property name="acquireIncrement" value="${db.acquireIncrement}" />
        <property name="minPoolSize" value="${db.minPoolSize}" />
        <property name="maxPoolSize" value="${db.maxPoolSize}" />
        <property name="idleConnectionTestPeriod" value="3600" />
        <property name="testConnectionOnCheckin" value="true" />
        <property name="numHelperThreads" value="6" />
        <property name="preferredTestQuery" value="SELECT 1 FROM CHANGELOG" />
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager" />

    <!-- shared transaction template for programmatic transaction control -->
    <bean id="defaultTransactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
        <property name="transactionManager" ref="transactionManager" />
    </bean>

    <bean id="pdfDocumentBuilder" class="com.zuehlke.pgadmissions.pdf.PdfDocumentBuilder" />
    
    <bean id="dataExportMailSender" class="org.easymock.EasyMock" factory-method="createMock" primary="true">
        <constructor-arg value="com.zuehlke.pgadmissions.mail.DataExportMailSender" />
    </bean>
    
    <bean id="mimeMessagePreparatorFactory" class="org.easymock.EasyMock" factory-method="createMock" primary="true">
        <constructor-arg value="com.zuehlke.pgadmissions.mail.MimeMessagePreparatorFactory" />
    </bean>
    
    <bean id="mailSender" class="com.zuehlke.pgadmissions.mail.FakeLoggingMailSender" />
    
    <bean id="encryptionHelper" class="com.zuehlke.pgadmissions.interceptors.EncryptionHelper" />

    <context:component-scan base-package="com.zuehlke.pgadmissions.dao" />
    
    <context:component-scan base-package="com.zuehlke.pgadmissions.services.exporters" />

    <context:component-scan base-package="com.zuehlke.pgadmissions.services">
        <context:include-filter type="regex" expression=".*ApplicationsService"/>
        <context:include-filter type="regex" expression=".*MailService.*"/>
     </context:component-scan>
    
    <context:component-scan base-package="com.zuehlke.pgadmissions.utils">
        <context:include-filter type="regex" expression=".*UserService.*"/>
     </context:component-scan>

</beans>
