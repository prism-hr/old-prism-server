package com.zuehlke.pgadmissions.domain.enums;

import java.util.HashMap;

import com.google.common.collect.Maps;


public enum PrismState {

    APPLICATION_APPROVAL(PrismScope.APPLICATION), //
    APPLICATION_APPROVAL_PENDING_COMPLETION(PrismScope.APPLICATION), //
    APPLICATION_APPROVAL_PENDING_FEEDBACK(PrismScope.APPLICATION), //
    APPLICATION_APPROVED(PrismScope.APPLICATION), //
    APPLICATION_APPROVED_COMPLETED(PrismScope.APPLICATION), //
    APPLICATION_APPROVED_PENDING_CORRECTION(PrismScope.APPLICATION), //
    APPLICATION_APPROVED_PENDING_EXPORT(PrismScope.APPLICATION), //
    APPLICATION_INTERVIEW(PrismScope.APPLICATION), //
    APPLICATION_INTERVIEW_PENDING_AVAILABILITY(PrismScope.APPLICATION), //
    APPLICATION_INTERVIEW_PENDING_COMPLETION(PrismScope.APPLICATION), //
    APPLICATION_INTERVIEW_PENDING_FEEDBACK(PrismScope.APPLICATION), //
    APPLICATION_INTERVIEW_PENDING_INTERVIEW(PrismScope.APPLICATION), //
    APPLICATION_INTERVIEW_PENDING_SCHEDULING(PrismScope.APPLICATION), //
    APPLICATION_REJECTED(PrismScope.APPLICATION), //
    APPLICATION_REJECTED_COMPLETED(PrismScope.APPLICATION), //
    APPLICATION_REJECTED_PENDING_CORRECTION(PrismScope.APPLICATION), //
    APPLICATION_REJECTED_PENDING_EXPORT(PrismScope.APPLICATION), //
    APPLICATION_REVIEW(PrismScope.APPLICATION), //
    APPLICATION_REVIEW_PENDING_COMPLETION(PrismScope.APPLICATION), //
    APPLICATION_REVIEW_PENDING_FEEDBACK(PrismScope.APPLICATION), //
    APPLICATION_UNSUBMITTED(PrismScope.APPLICATION), //
    APPLICATION_UNSUBMITTED_PENDING_COMPLETION(PrismScope.APPLICATION), //
    APPLICATION_VALIDATION(PrismScope.APPLICATION), //
    APPLICATION_VALIDATION_PENDING_COMPLETION(PrismScope.APPLICATION), //
    APPLICATION_VALIDATION_PENDING_FEEDBACK(PrismScope.APPLICATION), //
    APPLICATION_WITHDRAWN(PrismScope.APPLICATION), //
    APPLICATION_WITHDRAWN_COMPLETED(PrismScope.APPLICATION), //
    APPLICATION_WITHDRAWN_PENDING_CORRECTION(PrismScope.APPLICATION), //
    INSTITUTION_APPROVED(PrismScope.INSTITUTION), //
    PROGRAM_APPROVAL(PrismScope.PROGRAM), //
    PROGRAM_APPROVAL_PENDING_CORRECTION(PrismScope.PROGRAM), //
    PROGRAM_APPROVED(PrismScope.PROGRAM), //
    PROGRAM_DEACTIVATED(PrismScope.PROGRAM), //
    PROGRAM_DISABLED(PrismScope.PROGRAM), //
    PROGRAM_DISABLED_COMPLETED(PrismScope.PROGRAM), //
    PROGRAM_DISABLED_PENDING_IMPORT_REACTIVATION(PrismScope.PROGRAM), //
    PROGRAM_DISABLED_PENDING_REACTIVATION(PrismScope.PROGRAM), //
    PROGRAM_REJECTED(PrismScope.PROGRAM), //
    PROGRAM_WITHDRAWN(PrismScope.PROGRAM), //
    PROJECT_APPROVED(PrismScope.PROJECT), //
    PROJECT_DEACTIVATED(PrismScope.PROJECT), //
    PROJECT_DISABLED(PrismScope.PROJECT), //
    PROJECT_DISABLED_COMPLETED(PrismScope.PROJECT), //
    PROJECT_DISABLED_PENDING_PROGRAM_REACTIVATION(PrismScope.PROJECT), //
    PROJECT_DISABLED_PENDING_REACTIVATION(PrismScope.PROJECT), //
    SYSTEM_APPROVED(PrismScope.SYSTEM);
    
    private PrismScope scope;
    
    
    private static final HashMap<PrismState, PrismState> parentState = Maps.newHashMap();
    
    static {
        parentState.put(APPLICATION_APPROVAL,APPLICATION_APPROVAL);
        parentState.put(APPLICATION_APPROVAL_PENDING_COMPLETION,APPLICATION_APPROVAL);
        parentState.put(APPLICATION_APPROVAL_PENDING_FEEDBACK,APPLICATION_APPROVAL);
        parentState.put(APPLICATION_APPROVED,APPLICATION_APPROVED);
        parentState.put(APPLICATION_APPROVED_COMPLETED,APPLICATION_APPROVED);
        parentState.put(APPLICATION_APPROVED_PENDING_CORRECTION,APPLICATION_APPROVED);
        parentState.put(APPLICATION_APPROVED_PENDING_EXPORT,APPLICATION_APPROVED);
        parentState.put(APPLICATION_INTERVIEW,APPLICATION_INTERVIEW);
        parentState.put(APPLICATION_INTERVIEW_PENDING_AVAILABILITY,APPLICATION_INTERVIEW);
        parentState.put(APPLICATION_INTERVIEW_PENDING_COMPLETION,APPLICATION_INTERVIEW);
        parentState.put(APPLICATION_INTERVIEW_PENDING_FEEDBACK,APPLICATION_INTERVIEW);
        parentState.put(APPLICATION_INTERVIEW_PENDING_INTERVIEW,APPLICATION_INTERVIEW);
        parentState.put(APPLICATION_INTERVIEW_PENDING_SCHEDULING,APPLICATION_INTERVIEW);
        parentState.put(APPLICATION_REJECTED,APPLICATION_REJECTED);
        parentState.put(APPLICATION_REJECTED_COMPLETED,APPLICATION_REJECTED);
        parentState.put(APPLICATION_REJECTED_PENDING_CORRECTION,APPLICATION_REJECTED);
        parentState.put(APPLICATION_REJECTED_PENDING_EXPORT,APPLICATION_REJECTED);
        parentState.put(APPLICATION_REVIEW,APPLICATION_REVIEW);
        parentState.put(APPLICATION_REVIEW_PENDING_COMPLETION,APPLICATION_REVIEW);
        parentState.put(APPLICATION_REVIEW_PENDING_FEEDBACK,APPLICATION_REVIEW);
        parentState.put(APPLICATION_UNSUBMITTED,APPLICATION_UNSUBMITTED);
        parentState.put(APPLICATION_UNSUBMITTED_PENDING_COMPLETION,APPLICATION_UNSUBMITTED);
        parentState.put(APPLICATION_VALIDATION,APPLICATION_VALIDATION);
        parentState.put(APPLICATION_VALIDATION_PENDING_COMPLETION,APPLICATION_VALIDATION);
        parentState.put(APPLICATION_VALIDATION_PENDING_FEEDBACK,APPLICATION_VALIDATION);
        parentState.put(APPLICATION_WITHDRAWN,APPLICATION_WITHDRAWN);
        parentState.put(APPLICATION_WITHDRAWN_COMPLETED,APPLICATION_WITHDRAWN);
        parentState.put(APPLICATION_WITHDRAWN_PENDING_CORRECTION,APPLICATION_WITHDRAWN);
        parentState.put(INSTITUTION_APPROVED,INSTITUTION_APPROVED);
        parentState.put(PROGRAM_APPROVAL,PROGRAM_APPROVAL);
        parentState.put(PROGRAM_APPROVAL_PENDING_CORRECTION,PROGRAM_APPROVAL);
        parentState.put(PROGRAM_APPROVED,PROGRAM_APPROVED);
        parentState.put(PROGRAM_DEACTIVATED,PROGRAM_APPROVED);
        parentState.put(PROGRAM_DISABLED,PROGRAM_DISABLED);
        parentState.put(PROGRAM_DISABLED_COMPLETED,PROGRAM_DISABLED);
        parentState.put(PROGRAM_DISABLED_PENDING_IMPORT_REACTIVATION,PROGRAM_DISABLED);
        parentState.put(PROGRAM_DISABLED_PENDING_REACTIVATION,PROGRAM_DISABLED);
        parentState.put(PROGRAM_REJECTED,PROGRAM_REJECTED);
        parentState.put(PROGRAM_WITHDRAWN,PROGRAM_WITHDRAWN);
        parentState.put(PROJECT_APPROVED,PROJECT_APPROVED);
        parentState.put(PROJECT_DEACTIVATED,PROJECT_APPROVED);
        parentState.put(PROJECT_DISABLED,PROJECT_DISABLED);
        parentState.put(PROJECT_DISABLED_COMPLETED,PROJECT_DISABLED);
        parentState.put(PROJECT_DISABLED_PENDING_PROGRAM_REACTIVATION,PROJECT_DISABLED);
        parentState.put(PROJECT_DISABLED_PENDING_REACTIVATION,PROJECT_DISABLED);
        parentState.put(SYSTEM_APPROVED,SYSTEM_APPROVED);
    }

    private PrismState(PrismScope scope) {
        this.scope = scope;
    }
    
    public PrismScope getScope() {
        return scope;
    }
    
    public static PrismState getParentState(PrismState state) {
        return parentState.get(state);
    }
}
