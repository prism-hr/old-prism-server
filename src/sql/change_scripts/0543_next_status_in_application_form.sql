ALTER TABLE APPLICATION_FORM
	ADD COLUMN next_status VARCHAR(50) AFTER status,
	ADD INDEX (next_status),
	ADD FOREIGN KEY (status) REFERENCES STATE (id),
	ADD FOREIGN KEY (next_status) REFERENCES STATE (id)
;

UPDATE APPLICATION_FORM LEFT JOIN REVIEW_ROUND
	ON APPLICATION_FORM.latest_review_round_id = REVIEW_ROUND.id
LEFT JOIN INTERVIEW
	ON APPLICATION_FORM.latest_interview_id = INTERVIEW.id
LEFT JOIN APPROVAL_ROUND
	ON APPLICATION_FORM.latest_approval_round_id = APPROVAL_ROUND.id
LEFT JOIN (
	SELECT MAX(STATECHANGE_COMMENT.id) AS id,
		MAX(COMMENT.created_timestamp) AS created_timestamp,
		COMMENT.application_form_id AS application_form_id
	FROM STATECHANGE_COMMENT INNER JOIN COMMENT
		ON STATECHANGE_COMMENT.id = COMMENT.id
	GROUP BY COMMENT.application_form_id) AS LATEST_STATECHANGE_COMMENT
	ON APPLICATION_FORM.id = LATEST_STATECHANGE_COMMENT.application_form_id
LEFT JOIN STATECHANGE_COMMENT
	ON LATEST_STATECHANGE_COMMENT.id = STATECHANGE_COMMENT.id
SET APPLICATION_FORM.next_status = 
	CASE
		WHEN APPLICATION_FORM.status = "VALIDATION" 
			AND APPLICATION_FORM.latest_review_round_id IS NULL
			AND APPLICATION_FORM.latest_interview_id IS NULL
			AND APPLICATION_FORM.latest_approval_round_id IS NULL THEN
			STATECHANGE_COMMENT.next_status
		WHEN APPLICATION_FORM.status = "REVIEW" 
			AND REVIEW_ROUND.created_date < LATEST_STATECHANGE_COMMENT.created_timestamp THEN
			STATECHANGE_COMMENT.next_status
		WHEN APPLICATION_FORM.status = "INTERVIEW"
			AND INTERVIEW.created_date < LATEST_STATECHANGE_COMMENT.created_timestamp THEN
			STATECHANGE_COMMENT.next_status
		WHEN APPLICATION_FORM.status = "APPROVAL" 
			AND APPROVAL_ROUND.created_date < LATEST_STATECHANGE_COMMENT.created_timestamp THEN
			STATECHANGE_COMMENT.next_status
	END
WHERE APPLICATION_FORM.status IN ("VALIDATION", "REVIEW", "INTERVIEW", "APPROVAL")
;