ALTER TABLE WORKFLOW_PROPERTY_DEFINITION
	ADD COLUMN optional INT(1) UNSIGNED NOT NULL DEFAULT 0 AFTER workflow_property_category,
	ADD COLUMN range_specification INT(1) UNSIGNED NOT NULL DEFAULT 0 AFTER optional,
	ADD COLUMN minimum_permitted INT(3) UNSIGNED AFTER range_specification,
	ADD COLUMN maximum_permitted INT(3) UNSIGNED AFTER minimum_permitted
;

ALTER TABLE WORKFLOW_PROPERTY_DEFINITION
	MODIFY COLUMN optional INT(1) UNSIGNED NOT NULL,
	MODIFY COLUMN range_specification INT(1) UNSIGNED NOT NULL
;

UPDATE USER_ROLE INNER JOIN APPLICATION
	ON USER_ROLE.application_id = APPLICATION.id
INNER JOIN STATE
	ON APPLICATION.state_id = STATE.id
SET USER_ROLE.last_notified_date = CURRENT_DATE - INTERVAL 8 DAY
WHERE USER_ROLE.role_id = "APPLICATION_REFEREE"
	AND (STATE.state_group_id IN ("APPLICATION_REVIEW", "APPLICATION_INTERVIEW", "APPLICATION_APPROVAL")
		OR STATE.id IN ("APPLICATION_APPROVED", "APPLICATION_REJECTED"))
;

UPDATE USER_ROLE INNER JOIN APPLICATION
	ON USER_ROLE.application_id = APPLICATION.id
INNER JOIN STATE
	ON APPLICATION.state_id = STATE.id
SET USER_ROLE.last_notified_date = CURRENT_DATE - INTERVAL 2 DAY
WHERE USER_ROLE.role_id IN ("APPLICATION_INTERVIEWER", "APPLICATION_INTERVIEWEE")
;

INSERT INTO RESOURCE_STATE (application_id, state_id, primary_state)
	SELECT APPLICATION.id, "APPLICATION_REFERENCE", 0
	FROM APPLICATION INNER JOIN STATE
		ON APPLICATION.state_id = STATE.id
	WHERE STATE.state_group_id IN ("APPLICATION_REVIEW", "APPLICATION_INTERVIEW", "APPLICATION_APPROVAL")
		OR STATE.id IN ("APPLICATION_APPROVED", "APPLICATION_REJECTED")
;

ALTER TABLE WORKFLOW_PROPERTY_DEFINITION
	DROP COLUMN workflow_property_category
;

CREATE TABLE ACTION_CUSTOM_QUESTION_DEFINITION (
	id VARCHAR(50) NOT NULL,
	scope_id VARCHAR(50) NOT NULL,
	PRIMARY KEY (id),
	INDEX (scope_id),
	FOREIGN KEY (scope_id) REFERENCES SCOPE (id)
) ENGINE = INNODB
;

ALTER TABLE ACTION
	DROP COLUMN customizable_action,
	ADD COLUMN action_custom_question_definition_id VARCHAR(50) AFTER emphasized_action,
	ADD INDEX (action_custom_question_definition_id),
	ADD FOREIGN KEY (action_custom_question_definition_id) REFERENCES ACTION_CUSTOM_QUESTION_DEFINITION (id)
;

RENAME TABLE ACTION_CUSTOM_QUESTION TO ACTION_CUSTOM_QUESTION_CONFIGURATION
;

SET FOREIGN_KEY_CHECKS = 0
;

ALTER TABLE ACTION_CUSTOM_QUESTION_DEFINITION
	MODIFY COLUMN id VARCHAR(100) NOT NULL
;

ALTER TABLE ACTION
	MODIFY COLUMN action_custom_question_definition_id VARCHAR(100)
;

SET FOREIGN_KEY_CHECKS = 1
;

ALTER TABLE ACTION_CUSTOM_QUESTION_CONFIGURATION
	CHANGE COLUMN action_id action_custom_question_definition_id VARCHAR(100) NOT NULL,
	ADD FOREIGN KEY (action_custom_question_definition_id) REFERENCES ACTION_CUSTOM_QUESTION_DEFINITION (id)
;
